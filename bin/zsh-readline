#!/usr/bin/env zsh

print_usage() {
  exec 1>&2
  echo "Invokes zle vared to read one line of user input,"
  echo "printing result to stdout"
  echo ""
  echo "Args:"
  echo "  -m|--mode     initial zle mode, can be normal or insert"
  echo "  -s|--string   set initial edit buffer to string"
  echo "  -p|--prompt   set prompt"
  exit 1
}

die() {
  if [ -n "$1" ]; then
    echo "$1" >&2
  else
    echo "error" >&2
  fi
  exit 1
}

initial_mode="viins"
initial_string=""
prompt=""

# Parse command line options
while true; do
  case "$1" in
    '-m'|'--mode')
      shift 1
      if [ "$1" = "i" ] || [ "$1" = "insert" ] || [ "$1" = "viins" ]; then
        initial_mode="viins"
      elif [ "$1" = "n" ] || [ "$1" = "normal" ] || [ "$1" = "vicmd" ]; then
        initial_mode="vicmd"
      else
        die "wrong mode: $1"
      fi
      ;;
    '-s'|'--string')
      shift 1
      initial_string="$1"
      ;;
    '-p'|'--prompt')
      shift 1
      prompt="$1"
      ;;
    '-h'|'--help')
      print_usage
      ;;
    '')
      break
      ;;
    *)
      print_usage
      ;;
  esac

  shift 1
done

bindkey -v
bindkey -M viins '\C-h' vi-backward-char
bindkey -M viins '\C-l' vi-forward-char

# change cursor shape depending on mode
set-cursor-shape() {
  # >/dev/tty redirection prevents escape sequences to get into a variable
  case "$1" in
    block) echo -ne '\e[2 q' >/dev/tty;;
    beam) echo -ne '\e[6 q' >/dev/tty;;
  esac
}
zle-keymap-select() {
  case $KEYMAP in
  vicmd) set-cursor-shape block;;
  viins|main) set-cursor-shape beam;;
  esac
}
zle -N zle-keymap-select
zle-line-init() {
  zle -K viins
  set-cursor-shape beam
}
zle -N zle-line-init
# set beam cursor for each new prompt
reset_cursor() {set-cursor-shape beam}
preexec_functions+=(reset_cursor)
# start shell with beam cursor
set-cursor-shape beam

set_initial_mode() {
  zle -K "$initial_mode"
}
zle -N set_initial_mode

var="$initial_string"
vared -e -p "$prompt" -i set_initial_mode var

echo -nE "$var"

