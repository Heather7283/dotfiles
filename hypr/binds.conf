# Key binds config

# bind = , Super_L, submap, super_binds
#
# submap = super_binds
#
# bindr = , Super_L, submap, reset
#
# bind = SUPER, Y, execr, notify-send "Y pressed"
#
# bind = , catchall, execr, notify-send catchall
#
# submap = reset

# Launch applications
bind = SUPER, T, execr, if pgrep --exact "tmux: server"; then exec foot --term foot-extra tmux attach; else exec foot --term foot-extra tmux; fi
bind = SUPER SHIFT, T, execr, foot tmux new-session
bind = SUPER, W, execr, firefox

bind = SUPER, A, execr, foot-popup pulsemixer
bind = SUPER, R, execr, foot-popup ~/.config/scripts/drun-fzf/drun-fzf.sh
bind = SUPER, C, execr, foot-popup ~/.config/scripts/cliphist-fzf/cliphist-fzf.sh
bind = SUPER, B, execr, foot-popup ~/.config/scripts/firefox-history-fzf/firefox-history-fzf.sh
bind = SUPER, D, execr, foot-popup ~/.config/scripts/dashboard.sh

# Window management
bind = SUPER, Q, execr, ~/.config/scripts/hyprland-kill-active-window.sh
#bind = SUPER, Q, killactive
bind = SUPER, O, togglefloating,
bind = SUPER, P, pin,
bind = SUPER, F, fullscreen,1 # maximize (keep panel)
bind = SUPER SHIFT, F, fullscreen,0 # actual fullscreen

# zoom
binds {
    scroll_event_delay = 0
}
bind = SUPER, mouse_down, execr, hyprctl keyword cursor:zoom_factor "$(hyprctl getoption cursor:zoom_factor | awk '/float/ {print $2 + 0.25}')" # zoom in
bind = SUPER, mouse_up, execr, hyprctl keyword cursor:zoom_factor "$(hyprctl getoption cursor:zoom_factor | awk '/float/ {print $2 <= 1 ? 1 : $2 - 0.25}')" # zoom out
bind = SUPER, mouse:274, execr, hyprctl keyword cursor:zoom_factor 1 # wheel press

bind = SUPER, S, execr, grim - | tee ~/pictures/sshots/"$(date --iso-8601=ns)".png | wl-copy -t "image/png"
bind = SUPER SHIFT, S, execr, grim -g "$(slurp)" - | tee ~/pictures/sshots/"$(date --iso-8601=ns)".png | wl-copy -t "image/png"
bind = SUPER CTRL, S, execr, grim -g "$(slurp)" - | swappy -f - -o - | wl-copy -t "image/png"
bind = SUPER, U, execr, hyprpicker -a -f hex

# Cycle through open windows
bind = SUPER, N, cyclenext

# Scroll through existing workspaces
bind = SUPER, L, workspace, r+1
bind = SUPER, H, workspace, r-1
bind = SUPER, K, workspace, r+1
bind = SUPER, J, workspace, r-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = SUPER, mouse:272, movewindow
bindm = SUPER, mouse:273, resizewindow

# Switch workspaces with mainMod + [9-0]
bind = SUPER, 1, workspace, 1
bind = SUPER, 2, workspace, 2
bind = SUPER, 3, workspace, 3
bind = SUPER, 4, workspace, 4
bind = SUPER, 5, workspace, 5
bind = SUPER, 6, workspace, 6
bind = SUPER, 7, workspace, 7
bind = SUPER, 8, workspace, 8
bind = SUPER, 9, workspace, 9
bind = SUPER, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [9-0]
bind = SUPER SHIFT, 1, movetoworkspace, 1
bind = SUPER SHIFT, 2, movetoworkspace, 2
bind = SUPER SHIFT, 3, movetoworkspace, 3
bind = SUPER SHIFT, 4, movetoworkspace, 4
bind = SUPER SHIFT, 5, movetoworkspace, 5
bind = SUPER SHIFT, 6, movetoworkspace, 6
bind = SUPER SHIFT, 7, movetoworkspace, 7
bind = SUPER SHIFT, 8, movetoworkspace, 8
bind = SUPER SHIFT, 9, movetoworkspace, 9
bind = SUPER SHIFT, 0, movetoworkspace, 10

# Audio control with pactl
binde = , XF86AudioRaiseVolume, execr, pactl set-sink-volume @DEFAULT_SINK@ +5%
binde = , XF86AudioLowerVolume, execr, pactl set-sink-volume @DEFAULT_SINK@ -5%
bind = , XF86AudioMute, execr, pactl set-sink-mute @DEFAULT_SINK@ toggle
bind = , XF86AudioMicMute, execr, pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindr = , VoidSymbol, execr, pactl set-source-mute @DEFAULT_SOURCE@ toggle

# Backlight control
binde = , XF86MonBrightnessDown, execr, br="$(cat /sys/class/backlight/amdgpu_bl1/brightness)"; new_br="$((br - 10))"; echo "$new_br" >/sys/class/backlight/amdgpu_bl1/brightness
binde = , XF86MonBrightnessUp, execr, br="$(cat /sys/class/backlight/amdgpu_bl1/brightness)"; new_br="$((br + 10))"; echo "$new_br" >/sys/class/backlight/amdgpu_bl1/brightness

# Turn display off
# (XF86ScreenSaver doesn't work for some reason so we use the keycode)
bind = , code:160, execr, sleep 0.5 && hyprctl dispatch dpms off

# Bind F10 key to toggle player play/pause
bind = , XF86TouchpadToggle, execr, playerctl play-pause
